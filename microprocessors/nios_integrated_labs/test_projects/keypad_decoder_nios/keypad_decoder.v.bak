//keypad to 7 seg display
//Gabe Garves
//hex[7] = A
//always #1 clock = ~clock;

module keypad(bit4,out,in,clk);
input wire clk;
input wire [3:0] in;
output reg [3:0] out,bit4;

initial 
#0 out = 4'b1110;

always @ (posedge clk)
	begin
	case (out)
	4'b1110: if (!in[0])		
			  bit4 =4'b1111;		
		  else if (!in[1])
			  bit4 = 4'b0111;
		  else if (!in[2])
			  bit4 = 4'b0100;
		  else if (!in[3])
			  bit4 = 4'b0001;
		  else 
			  out = 4'b1101;
	4'b1101: if (!in[0])					
			  bit4 = 4'b0000;
		  else if (!in[1])
			  bit4 = 4'b1000;
		  else if (!in[2])
			  bit4 = 4'b0101;
		  else if (!in[3])
			  bit4 = 4'b0010;
		  else 
			  out = 4'b1011;
	4'b1011: if (!in[0])			
			  bit4 = 4'b1110;
		  else if (!in[1])
			  bit4 = 4'b1001;
		  else if (!in[2])
			  bit4 = 4'b0110;
		  else if (!in[3])
			  bit4 = 4'b0011;
		  else 
			  out = 4'b0111;
	4'b0111: if (!in[0])			
			  bit4 = 4'b1101;
		  else if (!in[1])
			  bit4 = 4'b1100;
		  else if (!in[2])
			  bit4 = 4'b1011;
		  else if (!in[3])
			  bit4 = 4'b1010;
		  else 
			  out = 4'b1110;
	endcase
	end
endmodule